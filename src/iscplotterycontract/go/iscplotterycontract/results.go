// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package iscplotterycontract

import "github.com/iotaledger/wasp/packages/vm/wasmlib/go/wasmlib"

type ArrayOfImmutableTicket struct {
	objID int32
}

func (a ArrayOfImmutableTicket) Length() int32 {
	return wasmlib.GetLength(a.objID)
}

func (a ArrayOfImmutableTicket) GetTicket(index int32) ImmutableTicket {
	return ImmutableTicket{objID: a.objID, keyID: wasmlib.Key32(index)}
}

type ImmutableGetMyHistoryTicketsResults struct {
	id int32
}

func (s ImmutableGetMyHistoryTicketsResults) Tickets() ArrayOfImmutableTicket {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxResultTickets], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfImmutableTicket{objID: arrID}
}

type ArrayOfMutableTicket struct {
	objID int32
}

func (a ArrayOfMutableTicket) Clear() {
	wasmlib.Clear(a.objID)
}

func (a ArrayOfMutableTicket) Length() int32 {
	return wasmlib.GetLength(a.objID)
}

func (a ArrayOfMutableTicket) GetTicket(index int32) MutableTicket {
	return MutableTicket{objID: a.objID, keyID: wasmlib.Key32(index)}
}

type MutableGetMyHistoryTicketsResults struct {
	id int32
}

func (s MutableGetMyHistoryTicketsResults) Tickets() ArrayOfMutableTicket {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxResultTickets], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfMutableTicket{objID: arrID}
}

type ImmutableGetMyTicketsResults struct {
	id int32
}

func (s ImmutableGetMyTicketsResults) Tickets() ArrayOfImmutableTicket {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxResultTickets], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfImmutableTicket{objID: arrID}
}

type MutableGetMyTicketsResults struct {
	id int32
}

func (s MutableGetMyTicketsResults) Tickets() ArrayOfMutableTicket {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxResultTickets], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfMutableTicket{objID: arrID}
}

type ImmutableGetCurrentRoundResults struct {
	id int32
}

func (s ImmutableGetCurrentRoundResults) Round() ImmutableRound {
	return ImmutableRound{objID: s.id, keyID: idxMap[IdxResultRound]}
}

type MutableGetCurrentRoundResults struct {
	id int32
}

func (s MutableGetCurrentRoundResults) Round() MutableRound {
	return MutableRound{objID: s.id, keyID: idxMap[IdxResultRound]}
}

type ImmutableGetOwnerResults struct {
	id int32
}

func (s ImmutableGetOwnerResults) Owner() wasmlib.ScImmutableAgentID {
	return wasmlib.NewScImmutableAgentID(s.id, idxMap[IdxResultOwner])
}

type MutableGetOwnerResults struct {
	id int32
}

func (s MutableGetOwnerResults) Owner() wasmlib.ScMutableAgentID {
	return wasmlib.NewScMutableAgentID(s.id, idxMap[IdxResultOwner])
}

type ImmutableGetRoundResults struct {
	id int32
}

func (s ImmutableGetRoundResults) Round() ImmutableRound {
	return ImmutableRound{objID: s.id, keyID: idxMap[IdxResultRound]}
}

type MutableGetRoundResults struct {
	id int32
}

func (s MutableGetRoundResults) Round() MutableRound {
	return MutableRound{objID: s.id, keyID: idxMap[IdxResultRound]}
}
