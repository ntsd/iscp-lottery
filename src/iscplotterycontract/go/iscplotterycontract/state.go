// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package iscplotterycontract

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type ArrayOfImmutableRound struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfImmutableRound) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfImmutableRound) GetRound(index uint32) ImmutableRound {
	return ImmutableRound{proxy: a.proxy.Index(index)}
}

type ImmutableISCPLotteryContractState struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableISCPLotteryContractState) CurrentRoundIdx() wasmtypes.ScImmutableUint32 {
	return wasmtypes.NewScImmutableUint32(s.proxy.Root(StateCurrentRoundIdx))
}

func (s ImmutableISCPLotteryContractState) HistoryTickets() ArrayOfImmutableTicket {
	return ArrayOfImmutableTicket{proxy: s.proxy.Root(StateHistoryTickets)}
}

func (s ImmutableISCPLotteryContractState) Owner() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.proxy.Root(StateOwner))
}

func (s ImmutableISCPLotteryContractState) Rounds() ArrayOfImmutableRound {
	return ArrayOfImmutableRound{proxy: s.proxy.Root(StateRounds)}
}

func (s ImmutableISCPLotteryContractState) Tickets() ArrayOfImmutableTicket {
	return ArrayOfImmutableTicket{proxy: s.proxy.Root(StateTickets)}
}

type ArrayOfMutableRound struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfMutableRound) AppendRound() MutableRound {
	return MutableRound{proxy: a.proxy.Append()}
}

func (a ArrayOfMutableRound) Clear() {
	a.proxy.ClearArray()
}

func (a ArrayOfMutableRound) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfMutableRound) GetRound(index uint32) MutableRound {
	return MutableRound{proxy: a.proxy.Index(index)}
}

type MutableISCPLotteryContractState struct {
	proxy wasmtypes.Proxy
}

func (s MutableISCPLotteryContractState) AsImmutable() ImmutableISCPLotteryContractState {
	return ImmutableISCPLotteryContractState(s)
}

func (s MutableISCPLotteryContractState) CurrentRoundIdx() wasmtypes.ScMutableUint32 {
	return wasmtypes.NewScMutableUint32(s.proxy.Root(StateCurrentRoundIdx))
}

func (s MutableISCPLotteryContractState) HistoryTickets() ArrayOfMutableTicket {
	return ArrayOfMutableTicket{proxy: s.proxy.Root(StateHistoryTickets)}
}

func (s MutableISCPLotteryContractState) Owner() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.proxy.Root(StateOwner))
}

func (s MutableISCPLotteryContractState) Rounds() ArrayOfMutableRound {
	return ArrayOfMutableRound{proxy: s.proxy.Root(StateRounds)}
}

func (s MutableISCPLotteryContractState) Tickets() ArrayOfMutableTicket {
	return ArrayOfMutableTicket{proxy: s.proxy.Root(StateTickets)}
}
