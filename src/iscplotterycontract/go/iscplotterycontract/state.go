// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package iscplotterycontract

import "github.com/iotaledger/wasp/packages/vm/wasmlib/go/wasmlib"

type ArrayOfImmutableRound struct {
	objID int32
}

func (a ArrayOfImmutableRound) Length() int32 {
	return wasmlib.GetLength(a.objID)
}

func (a ArrayOfImmutableRound) GetRound(index int32) ImmutableRound {
	return ImmutableRound{objID: a.objID, keyID: wasmlib.Key32(index)}
}

type ImmutableISCPLotteryContractState struct {
	id int32
}

func (s ImmutableISCPLotteryContractState) CurrentRoundIdx() wasmlib.ScImmutableInt32 {
	return wasmlib.NewScImmutableInt32(s.id, idxMap[IdxStateCurrentRoundIdx])
}

func (s ImmutableISCPLotteryContractState) HistoryTickets() ArrayOfImmutableTicket {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxStateHistoryTickets], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfImmutableTicket{objID: arrID}
}

func (s ImmutableISCPLotteryContractState) Owner() wasmlib.ScImmutableAgentID {
	return wasmlib.NewScImmutableAgentID(s.id, idxMap[IdxStateOwner])
}

func (s ImmutableISCPLotteryContractState) Rounds() ArrayOfImmutableRound {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxStateRounds], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfImmutableRound{objID: arrID}
}

func (s ImmutableISCPLotteryContractState) Tickets() ArrayOfImmutableTicket {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxStateTickets], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfImmutableTicket{objID: arrID}
}

type ArrayOfMutableRound struct {
	objID int32
}

func (a ArrayOfMutableRound) Clear() {
	wasmlib.Clear(a.objID)
}

func (a ArrayOfMutableRound) Length() int32 {
	return wasmlib.GetLength(a.objID)
}

func (a ArrayOfMutableRound) GetRound(index int32) MutableRound {
	return MutableRound{objID: a.objID, keyID: wasmlib.Key32(index)}
}

type MutableISCPLotteryContractState struct {
	id int32
}

func (s MutableISCPLotteryContractState) CurrentRoundIdx() wasmlib.ScMutableInt32 {
	return wasmlib.NewScMutableInt32(s.id, idxMap[IdxStateCurrentRoundIdx])
}

func (s MutableISCPLotteryContractState) HistoryTickets() ArrayOfMutableTicket {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxStateHistoryTickets], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfMutableTicket{objID: arrID}
}

func (s MutableISCPLotteryContractState) Owner() wasmlib.ScMutableAgentID {
	return wasmlib.NewScMutableAgentID(s.id, idxMap[IdxStateOwner])
}

func (s MutableISCPLotteryContractState) Rounds() ArrayOfMutableRound {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxStateRounds], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfMutableRound{objID: arrID}
}

func (s MutableISCPLotteryContractState) Tickets() ArrayOfMutableTicket {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxStateTickets], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfMutableTicket{objID: arrID}
}
