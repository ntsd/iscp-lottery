// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package iscplotterycontract

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type ImmutableCreateTicketParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableCreateTicketParams) Number() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.proxy.Root(ParamNumber))
}

type MutableCreateTicketParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableCreateTicketParams) Number() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.proxy.Root(ParamNumber))
}

type ImmutableInitParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableInitParams) Owner() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.proxy.Root(ParamOwner))
}

type MutableInitParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableInitParams) Owner() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.proxy.Root(ParamOwner))
}

type ImmutableSetOwnerParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableSetOwnerParams) Owner() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.proxy.Root(ParamOwner))
}

type MutableSetOwnerParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableSetOwnerParams) Owner() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.proxy.Root(ParamOwner))
}

type ImmutableGetRoundParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableGetRoundParams) RoundIdx() wasmtypes.ScImmutableUint32 {
	return wasmtypes.NewScImmutableUint32(s.proxy.Root(ParamRoundIdx))
}

type MutableGetRoundParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableGetRoundParams) RoundIdx() wasmtypes.ScMutableUint32 {
	return wasmtypes.NewScMutableUint32(s.proxy.Root(ParamRoundIdx))
}
